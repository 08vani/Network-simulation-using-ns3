%!PS-Adobe-2.0 EPSF-2.0
%%Title: cwnd4.eps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Fri Oct 29 19:02:56 2021
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (cwnd4.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Oct 29 19:02:56 2021)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
854 448 M
63 0 V
6030 0 R
-63 0 V
stroke
770 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
854 1004 M
63 0 V
6030 0 R
-63 0 V
stroke
770 1004 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 1561 M
63 0 V
6030 0 R
-63 0 V
stroke
770 1561 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 2117 M
63 0 V
6030 0 R
-63 0 V
stroke
770 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 2674 M
63 0 V
6030 0 R
-63 0 V
stroke
770 2674 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 3230 M
63 0 V
6030 0 R
-63 0 V
stroke
770 3230 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 3786 M
63 0 V
6030 0 R
-63 0 V
stroke
770 3786 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 4343 M
63 0 V
6030 0 R
-63 0 V
stroke
770 4343 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 4899 M
63 0 V
6030 0 R
-63 0 V
stroke
770 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 448 M
0 63 V
0 4388 R
0 -63 V
stroke
854 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1531 448 M
0 63 V
0 4388 R
0 -63 V
stroke
1531 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2208 448 M
0 63 V
0 4388 R
0 -63 V
stroke
2208 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2885 448 M
0 63 V
0 4388 R
0 -63 V
stroke
2885 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3562 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3562 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4239 448 M
0 63 V
0 4388 R
0 -63 V
stroke
4239 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4916 448 M
0 63 V
0 4388 R
0 -63 V
stroke
4916 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5593 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5593 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6270 448 M
0 63 V
0 4388 R
0 -63 V
stroke
6270 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4388 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
854 4899 N
854 448 L
6093 0 V
0 4451 V
-6093 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
133 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (cwnd)]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3900 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (time)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
6296 4766 M
('tcp-example4.cwnd' using 1:2) Rshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
888 448 Pls
923 746 Pls
924 776 Pls
926 836 Pls
927 895 Pls
928 955 Pls
958 1015 Pls
959 1074 Pls
960 1134 Pls
962 1194 Pls
963 1253 Pls
964 1313 Pls
966 1372 Pls
967 1432 Pls
968 1492 Pls
993 1551 Pls
994 1611 Pls
995 1671 Pls
997 1730 Pls
998 1790 Pls
999 1850 Pls
1000 1909 Pls
1002 1969 Pls
1003 2029 Pls
1004 2088 Pls
1006 2148 Pls
1007 2207 Pls
1008 2267 Pls
1009 2327 Pls
1011 2386 Pls
1012 2446 Pls
1013 2506 Pls
1014 2565 Pls
1028 2625 Pls
1029 2685 Pls
1030 2744 Pls
1031 2804 Pls
1033 2864 Pls
1034 2923 Pls
1035 2983 Pls
1037 3042 Pls
1038 3102 Pls
1039 3162 Pls
1040 3221 Pls
1042 3281 Pls
1043 3341 Pls
1044 3400 Pls
1046 3460 Pls
1047 3520 Pls
1048 3579 Pls
1049 3639 Pls
1051 3699 Pls
1052 3758 Pls
1053 3818 Pls
1054 3877 Pls
1056 3937 Pls
1057 3997 Pls
1058 4056 Pls
1060 4116 Pls
1061 4176 Pls
1074 4235 Pls
1086 4265 Pls
1099 4295 Pls
1112 4325 Pls
1116 4355 Pls
1117 4325 Pls
1118 4306 Pls
1118 4296 Pls
1119 4286 Pls
1120 4277 Pls
1120 4267 Pls
1121 4257 Pls
1122 4248 Pls
1122 4238 Pls
1123 4228 Pls
1124 4219 Pls
1124 4209 Pls
1125 4200 Pls
1125 4190 Pls
1126 4180 Pls
1127 4171 Pls
1127 4161 Pls
1128 4151 Pls
1129 4142 Pls
1129 4132 Pls
1130 4122 Pls
1131 4113 Pls
1131 4103 Pls
1132 4093 Pls
1132 4084 Pls
1133 4074 Pls
1134 4065 Pls
1134 4055 Pls
1135 4045 Pls
1136 4036 Pls
1136 4026 Pls
1137 4016 Pls
1138 4007 Pls
1138 3997 Pls
1139 3987 Pls
1140 3978 Pls
1140 3968 Pls
1141 3958 Pls
1141 3949 Pls
1142 3939 Pls
1143 3930 Pls
1143 3920 Pls
1144 3910 Pls
1145 3901 Pls
1145 3891 Pls
1146 3881 Pls
1147 3872 Pls
1147 3862 Pls
1148 3852 Pls
1148 3843 Pls
1149 3833 Pls
1150 3823 Pls
1150 3814 Pls
1151 3804 Pls
1152 3795 Pls
1152 3785 Pls
1153 3775 Pls
1154 3766 Pls
1154 3756 Pls
1155 3746 Pls
1155 3737 Pls
1156 3727 Pls
1157 3717 Pls
1157 3708 Pls
1158 3698 Pls
1159 3688 Pls
1159 3679 Pls
1160 3669 Pls
1161 3660 Pls
1161 3650 Pls
1162 3640 Pls
1163 3631 Pls
1163 3621 Pls
1164 3611 Pls
1164 3602 Pls
1165 3592 Pls
1166 3582 Pls
1166 3573 Pls
1167 3563 Pls
1168 3554 Pls
1168 3544 Pls
1169 3534 Pls
1170 3525 Pls
1170 3515 Pls
1171 3505 Pls
1171 3496 Pls
1172 3486 Pls
1173 3476 Pls
1173 3467 Pls
1174 3457 Pls
1175 3447 Pls
1175 3438 Pls
1176 3428 Pls
1177 3419 Pls
1177 3409 Pls
1178 3399 Pls
1178 3390 Pls
1179 3380 Pls
1180 3370 Pls
1180 3361 Pls
1181 3351 Pls
1182 3341 Pls
1182 3332 Pls
1183 3322 Pls
1184 3312 Pls
1184 3303 Pls
1185 3263 Pls
1186 3254 Pls
1186 3244 Pls
1187 3234 Pls
1187 3225 Pls
1188 3215 Pls
1189 3206 Pls
1189 3196 Pls
1190 3186 Pls
1218 3132 Pls
1244 3102 Pls
1244 3132 Pls
1246 3162 Pls
1247 3132 Pls
1248 3113 Pls
1248 3097 Pls
1249 3081 Pls
1249 3065 Pls
1250 3049 Pls
1251 3033 Pls
1251 3017 Pls
1252 3001 Pls
1253 2984 Pls
1253 2968 Pls
1254 2952 Pls
1255 2936 Pls
1255 2920 Pls
1256 2904 Pls
1256 2888 Pls
1257 2842 Pls
1258 2826 Pls
1258 2809 Pls
1259 2793 Pls
1260 2777 Pls
1260 2761 Pls
1261 2745 Pls
1262 2729 Pls
1262 2713 Pls
1263 2697 Pls
1264 2680 Pls
1264 2664 Pls
1265 2648 Pls
1265 2632 Pls
1266 2616 Pls
1267 2600 Pls
1267 2584 Pls
1268 2568 Pls
1269 2551 Pls
1269 2535 Pls
1270 2519 Pls
1271 2503 Pls
1271 2487 Pls
1272 2471 Pls
1272 2455 Pls
1273 2439 Pls
1274 2422 Pls
1274 2406 Pls
1275 2390 Pls
1276 2374 Pls
1276 2358 Pls
1277 2342 Pls
1290 2297 Pls
1307 2267 Pls
1329 2297 Pls
1361 2327 Pls
1402 2357 Pls
1458 2386 Pls
1518 2416 Pls
1582 2446 Pls
1651 2476 Pls
1724 2506 Pls
1804 2536 Pls
1892 2565 Pls
1919 2595 Pls
1919 2565 Pls
1920 2545 Pls
1920 2535 Pls
1921 2525 Pls
1922 2515 Pls
1922 2505 Pls
1923 2495 Pls
1924 2485 Pls
1924 2475 Pls
1925 2465 Pls
1926 2455 Pls
1926 2444 Pls
1927 2434 Pls
1928 2424 Pls
1928 2414 Pls
1929 2404 Pls
1929 2394 Pls
1930 2384 Pls
1931 2374 Pls
1931 2364 Pls
1932 2354 Pls
1933 2344 Pls
1933 2334 Pls
1934 2324 Pls
1935 2313 Pls
1935 2303 Pls
1936 2293 Pls
1936 2283 Pls
1937 2273 Pls
1938 2263 Pls
1938 2253 Pls
1939 2243 Pls
1940 2233 Pls
1940 2223 Pls
1941 2213 Pls
1942 2203 Pls
1942 2193 Pls
1943 2182 Pls
1943 2172 Pls
1944 2162 Pls
1945 2152 Pls
1945 2142 Pls
1946 2132 Pls
1947 2122 Pls
1947 2112 Pls
1948 2102 Pls
1949 2092 Pls
1949 2082 Pls
1950 2072 Pls
1951 2062 Pls
1951 2052 Pls
1952 2041 Pls
1952 2031 Pls
1953 2021 Pls
1954 2011 Pls
1954 2001 Pls
1955 1991 Pls
1956 1981 Pls
1956 1971 Pls
1957 1961 Pls
1964 1909 Pls
1991 1939 Pls
2055 1969 Pls
2123 1999 Pls
2197 2029 Pls
2276 2058 Pls
2308 2088 Pls
2308 2058 Pls
2310 2037 Pls
2310 2027 Pls
2311 2017 Pls
2312 2006 Pls
2312 1996 Pls
2313 1985 Pls
2314 1975 Pls
2314 1964 Pls
2315 1954 Pls
2315 1943 Pls
2316 1933 Pls
2317 1922 Pls
2317 1912 Pls
2318 1901 Pls
2319 1891 Pls
2319 1880 Pls
2320 1870 Pls
2321 1860 Pls
2321 1849 Pls
2322 1839 Pls
2322 1828 Pls
2323 1818 Pls
2324 1807 Pls
2324 1797 Pls
2325 1786 Pls
2326 1776 Pls
2326 1765 Pls
2327 1755 Pls
2328 1744 Pls
2328 1734 Pls
2329 1724 Pls
2330 1713 Pls
2330 1703 Pls
2331 1692 Pls
2331 1682 Pls
2332 1671 Pls
2333 1661 Pls
2333 1650 Pls
2334 1640 Pls
2335 1629 Pls
2335 1619 Pls
2336 1608 Pls
2343 1551 Pls
2383 1581 Pls
2463 1611 Pls
2551 1641 Pls
2649 1671 Pls
2763 1701 Pls
2896 1730 Pls
3064 1760 Pls
3303 1790 Pls
5140 1820 Pls
5380 1850 Pls
5547 1879 Pls
5680 1909 Pls
5792 1939 Pls
5891 1969 Pls
5962 1999 Pls
5962 1969 Pls
5963 1948 Pls
5963 1937 Pls
5964 1927 Pls
5965 1916 Pls
5965 1906 Pls
5966 1895 Pls
5967 1885 Pls
5967 1874 Pls
5968 1864 Pls
5969 1854 Pls
5969 1843 Pls
5970 1833 Pls
5971 1822 Pls
5971 1812 Pls
5972 1801 Pls
5972 1791 Pls
5973 1780 Pls
5974 1770 Pls
5974 1759 Pls
5975 1749 Pls
5976 1738 Pls
5976 1728 Pls
5977 1717 Pls
5978 1707 Pls
5979 1696 Pls
5979 1686 Pls
5980 1675 Pls
5981 1665 Pls
5981 1654 Pls
5982 1644 Pls
5983 1633 Pls
5983 1623 Pls
5984 1612 Pls
5985 1602 Pls
5985 1591 Pls
5986 1581 Pls
5986 1570 Pls
5987 1560 Pls
5988 1549 Pls
5996 1492 Pls
5999 1522 Pls
6060 1551 Pls
6112 1581 Pls
6165 1611 Pls
6222 1641 Pls
6283 1671 Pls
6346 1701 Pls
6414 1730 Pls
6490 1760 Pls
6490 1730 Pls
6491 1708 Pls
6492 1697 Pls
6493 1686 Pls
6493 1675 Pls
6494 1664 Pls
6495 1653 Pls
6495 1642 Pls
6496 1631 Pls
6497 1620 Pls
6498 1609 Pls
6498 1598 Pls
6500 1587 Pls
6500 1576 Pls
6502 1565 Pls
6502 1554 Pls
6504 1543 Pls
6504 1532 Pls
6505 1521 Pls
6506 1510 Pls
6507 1499 Pls
6508 1488 Pls
6509 1477 Pls
6510 1466 Pls
6511 1455 Pls
6512 1444 Pls
6513 1433 Pls
6514 1422 Pls
6516 1411 Pls
6516 1400 Pls
6517 1389 Pls
6518 1378 Pls
6518 1367 Pls
6525 1313 Pls
6571 1343 Pls
6659 1372 Pls
6758 1402 Pls
6871 1432 Pls
6579 4766 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
854 4899 N
854 448 L
6093 0 V
0 4451 V
-6093 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
